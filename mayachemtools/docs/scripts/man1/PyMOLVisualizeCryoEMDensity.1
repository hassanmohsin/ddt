.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PyMOLVisualizeCryoEMDensity 1"
.TH PyMOLVisualizeCryoEMDensity 1 "2018-09-11" "perl v5.22.4" "MayaChemTools"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PyMOLVisualizeCryoEMDensity.py \- Visualize cryo\-EM density
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
PyMOLVisualizeCryoEMDensity.py [\fB\-\-allowEmptyObjects\fR <yes or no>]
[\fB\-\-BFactorChainCartoonPutty\fR <yes or no>] [\fB\-\-BFactorColorPalette\fR <text> ]
[\fB\-\-chainIDs\fR <First, All or \s-1ID1,ID2...\s0>] [\fB\-\-densityMapFile\fR <text>]
[\fB\-\-ligandIDs\fR <Largest, All or \s-1ID1,ID2...\s0>] [\fB\-\-labelFontID\fR <number>]
[\fB\-\-meshCarveRadius\fR <number>] [\fB\-\-meshComplex\fR <yes or no>]
[\fB\-\-meshChainComplex\fR <yes, no, or auto>] [\fB\-\-meshColor\fR <text>]
[\fB\-\-meshLevel\fR <number>] [\fB\-\-meshWidth\fR <number>] [\fB\-\-PMLOut\fR <yes or no>]
[\fB\-\-pocketContactsLigandColor\fR <text>] [\fB\-\-pocketContactsSolventColor\fR <text>]
[\fB\-\-pocketContactsInorganicColor\fR <text>] [\fB\-\-pocketDistanceCutoff\fR <number>]
[\fB\-\-pocketLabelColor\fR <text>] [\fB\-\-pocketSurface\fR <yes or no>]
[\fB\-\-surfaceComplex\fR <yes or no>] [\fB\-\-surfaceChainComplex\fR <yes, no or auto>]
[\fB\-\-surfaceTransparency\fR <number>] [\fB\-\-overwrite\fR] [\fB\-w\fR <dir>] \fB\-i\fR <infile> \fB\-o\fR <outfile>
.PP
PyMOLVisualizeCryoEMDensity.py \fB\-h\fR | \fB\-\-help\fR | \fB\-e\fR | \fB\-\-examples\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Generate PyMOL visualization files for viewing electron microscopy (\s-1EM\s0) or
cryo-EM density around chains, ligands, and ligand binding pockets in
macromolecules including proteins and nucleic acids.
.PP
The supported input file formats are: Macromolecule \- \s-1PDB \s0(.pdb) or \s-1CIF\s0(.cif),
Cryo-EM Density \- Collaborative Computational Project Number 4 (\s-1CCP4\s0) ( .map)
.PP
The supported output file formats are: PyMOL script file (.pml), PyMOL session
file (.pse)
.PP
The cryo-EM density and header files along with \s-1PDB\s0 files may be downloaded
from appropriate servers using DownloadPDBFiles.pl script.
.PP
A variety of PyMOL groups and objects may be  created for visualization of
cryo-EM density present in map files. These groups and objects correspond to
maps, meshes, surfaces,chains, ligands, inorganics, ligand binding pockets,
pocket, polar interactions, and pocket hydrophobic surfaces. A complete
hierarchy of all possible PyMOL groups and objects is shown below:
.PP
.Vb 10
\&    <PDBFileRoot>
\&        .Complex
\&            .Complex
\&            .CryoEM
\&                .Map
\&                .Mesh
\&                .Surface
\&        .Chain<ID>
\&            .Complex
\&                .Complex
\&                .CryoEM
\&                    .Mesh
\&                    .Surface
\&            .Chain
\&                .Chain
\&                .BFactor
\&            .Solvent
\&            .Inorganic
\&            .Ligand<ID>
\&                .Ligand
\&                    .Ligand
\&                    .CryoEM
\&                        .Mesh
\&                        .Surface
\&                .Pocket
\&                    .Pocket
\&                    .CryoEM
\&                        .Mesh
\&                        .Surface
\&                    .Polar_Contacts
\&                    .Surface
\&                .Pocket_Solvent
\&                    .Pocket_Solvent
\&                    .CryoEM
\&                        .Mesh
\&                        .Surface
\&                    .Polar_Contacts
\&                .Pocket_Inorganic
\&                    .Pocket_Inorganic
\&                    .CryoEM
\&                        .Mesh
\&                        .Surface
\&                    .Polar_Contacts
\&            .Ligand<ID>
\&                .Ligand
\&                    ... ... ...
\&                .Pocket
\&                    ... ... ...
\&                .Pocket_Solvent
\&                    ... ... ...
\&                .Pocket_Inorganic
\&                    ... ... ...
\&        .Chain<ID>
\&            ... ... ...
\&            .Ligand<ID>
\&                ... ... ...
\&            .Ligand<ID>
\&                ... ... ...
\&        .Chain<ID>
\&            ... ... ...
.Ve
.PP
The meshes and surfaces  are not created for complete complex in input file
by default. A word to the wise: The creation of these surface and mesh objects
may slow down loading of \s-1PML\s0 file and generation of \s-1PSE\s0 file, based on the size
of input complex and map files. The generation of \s-1PSE\s0 file may also fail. In 
addition, you may want to interactively manipulate the contour level for meshes
and surfaces. The recommended value for contour level is automatically retrieved
from the header file available from \s-1EM\s0 density server. The recommended value
may not always work.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-a, \-\-allowEmptyObjects\fR <yes or no>  [default: no]" 4
.IX Item "-a, --allowEmptyObjects <yes or no> [default: no]"
Allow creation of empty PyMOL objects corresponding to solvent and
inorganic atom selections across chains, ligands, and ligand binding pockets
in input file.
.IP "\fB\-b, \-\-BFactorChainCartoonPutty\fR <yes or no>  [default: yes]" 4
.IX Item "-b, --BFactorChainCartoonPutty <yes or no> [default: yes]"
A cartoon putty around individual chains colored by B factors. The minimum
and maximum values for B factors are automatically detected. These values
indicate spread of cryo-EM density around atoms. The 'blue_white_red' color
palette is deployed for coloring the cartoon putty.
.IP "\fB\-\-BFactorColorPalette\fR <text>  [default: blue_white_red]" 4
.IX Item "--BFactorColorPalette <text> [default: blue_white_red]"
Color palette for coloring cartoon putty around chains generated using B
factors. An valid PyMOL color palette name is allowed. No validation is
performed. The complete list of valid color palette names is a available
at: pymolwiki.org/index.php/Spectrum. Examples: blue_white_red,
blue_white_magenta, blue_red, green_white_red, green_red.
.IP "\fB\-c, \-\-chainIDs\fR <First, All or \s-1ID1,ID2...\s0>  [default: First]" 4
.IX Item "-c, --chainIDs <First, All or ID1,ID2...> [default: First]"
List of chain IDs to use for visualizing cryo-EM density. Possible values:
First, All, or a comma delimited list of chain IDs. The default is to use the
chain \s-1ID\s0 for the first chain in input file.
.IP "\fB\-d, \-\-densityMapFile\fR <text>  [default: auto]" 4
.IX Item "-d, --densityMapFile <text> [default: auto]"
CryoEM density map file name. The \s-1EMDB ID\s0 is retrieved from \s-1PDB\s0 and \s-1CIF\s0
file to set the cryo-EM density file name during automatic detection of
density file. The format of the file name is as follows:
.Sp
.Vb 1
\&    emd_<EMDBID>.map.gz or emd_<EMDBID>.map
.Ve
.Sp
The density file must be present in the working directory.
.IP "\fB\-e, \-\-examples\fR" 4
.IX Item "-e, --examples"
Print examples.
.IP "\fB\-h, \-\-help\fR" 4
.IX Item "-h, --help"
Print this help message.
.IP "\fB\-i, \-\-infile\fR <infile>" 4
.IX Item "-i, --infile <infile>"
Input file name.
.IP "\fB\-l, \-\-ligandIDs\fR <Largest, All or \s-1ID1,ID2...\s0>  [default: Largest]" 4
.IX Item "-l, --ligandIDs <Largest, All or ID1,ID2...> [default: Largest]"
List of ligand IDs present in chains for visualizing cryo-EM density across
ligands and ligand binding pockets. Possible values: Largest, All, or a comma
delimited list of ligand IDs. The default is to use the largest ligand present
in all or specified chains in input file.
.Sp
Ligands are identified using organic selection operator available in PyMOL.
It'll also  identify buffer molecules as ligands. The largest ligand contains
the highest number of heavy atoms.
.IP "\fB\-\-labelFontID\fR <number>  [default: 7]" 4
.IX Item "--labelFontID <number> [default: 7]"
Font \s-1ID\s0 for drawing labels. Default: 7 (Sans Bold). Valid values: 5 to 16.
The specified value must be a valid PyMOL font \s-1ID.\s0 No validation is
performed. The complete lists of valid font IDs is available at:
pymolwiki.org/index.php/Label_font_id. Examples: 5 \- Sans;
7 \- Sans Bold; 9 \- Serif; 10 \- Serif Bold.
.IP "\fB\-\-meshCarveRadius\fR <number>  [default: 1.6]" 4
.IX Item "--meshCarveRadius <number> [default: 1.6]"
Radius in Angstroms around atoms for including cryo-EM density.
.IP "\fB\-\-meshComplex\fR <yes or no>  [default: no]" 4
.IX Item "--meshComplex <yes or no> [default: no]"
Create meshes for complete complex in input file corresponding to density
map.
.IP "\fB\-\-meshChainComplex\fR <yes, no, or auto>  [default: auto]" 4
.IX Item "--meshChainComplex <yes, no, or auto> [default: auto]"
Create meshes for individual chain complex in input file corresponding to
density map. By default, the meshes are automatically created for chain
complexes without any ligands.
.IP "\fB\-\-meshColor\fR <text>  [default: blue]" 4
.IX Item "--meshColor <text> [default: blue]"
Line color for mesh corresponding to density map. The specified value
must be valid color. No validation is performed.
.IP "\fB\-\-meshLevel\fR <number>  [default: auto]" 4
.IX Item "--meshLevel <number> [default: auto]"
Contour level in sigma units for generating mesh corresponding to density
map. The default is to automatically retrieve the recommended contour
level. The header file emd\-<\s-1EMDBID\s0>.xml must be present in the working
directory  to automatically retrieve recommended value for mesh contour
level. Otherwise, the default contour level is set to 1.
.Sp
You may want to interactively manipulate the contour level for meshes and
surfaces. The default recommended value may not always work.
.IP "\fB\-\-meshWidth\fR <number>  [default: 0.5]" 4
.IX Item "--meshWidth <number> [default: 0.5]"
Line width for mesh lines corresponding to density map.
.IP "\fB\-o, \-\-outfile\fR <outfile>" 4
.IX Item "-o, --outfile <outfile>"
Output file name.
.IP "\fB\-p, \-\-PMLOut\fR <yes or no>  [default: yes]" 4
.IX Item "-p, --PMLOut <yes or no> [default: yes]"
Save \s-1PML\s0 file during generation of \s-1PSE\s0 file.
.IP "\fB\-\-pocketContactsLigandColor\fR <text>  [default: orange]" 4
.IX Item "--pocketContactsLigandColor <text> [default: orange]"
Color for drawing polar contacts between ligand and pocket residues.
The specified value must be valid color. No validation is performed.
.IP "\fB\-\-pocketContactsSolventColor\fR <text>  [default: marine]" 4
.IX Item "--pocketContactsSolventColor <text> [default: marine]"
Color for drawing polar contacts between solvent and pocket residues..
The specified value must be valid color. No validation is performed.
.IP "\fB\-\-pocketContactsInorganicColor\fR <text>  [default: deepsalmon]" 4
.IX Item "--pocketContactsInorganicColor <text> [default: deepsalmon]"
Color for drawing polar contacts between inorganic and pocket residues.
The specified value must be valid color. No validation is performed.
.IP "\fB\-\-pocketDistanceCutoff\fR <number>  [default: 5.0]" 4
.IX Item "--pocketDistanceCutoff <number> [default: 5.0]"
Distance in Angstroms for identifying pocket residues around ligands.
.IP "\fB\-\-pocketLabelColor\fR <text>  [default: magenta]" 4
.IX Item "--pocketLabelColor <text> [default: magenta]"
Color for drawing residue or atom level labels for a pocket. The specified
value must be valid color. No validation is performed.
.IP "\fB\-\-pocketSurface\fR <yes or no>  [default: yes]" 4
.IX Item "--pocketSurface <yes or no> [default: yes]"
Hydrophobic surface around pocket. The pocket surface is colored by
hydrophobicity. It is only valid for proteins. The color of amino acids is
set using the Eisenberg hydrophobicity scale. The color varies from red
to white, red being the most hydrophobic amino acid.
.IP "\fB\-\-surfaceComplex\fR <yes or no>  [default: no]" 4
.IX Item "--surfaceComplex <yes or no> [default: no]"
Create surfaces for complete complex in input file corresponding to density
map.
.IP "\fB\-\-surfaceChainComplex\fR <yes, no or auto>  [default: auto]" 4
.IX Item "--surfaceChainComplex <yes, no or auto> [default: auto]"
Create surfaces for individual chain complexes in input file corresponding to
density map. By default, the surfaces are automatically created for chain complexes
without any ligands.
.IP "\fB\-\-surfaceTransparency\fR <number>  [default: 0.25]" 4
.IX Item "--surfaceTransparency <number> [default: 0.25]"
Surface transparency for molecular and cryo-EM density surfaces.
.IP "\fB\-\-overwrite\fR" 4
.IX Item "--overwrite"
Overwrite existing files.
.IP "\fB\-w, \-\-workingdir\fR <dir>" 4
.IX Item "-w, --workingdir <dir>"
Location of working directory which defaults to the current directory.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
To visualize cryo-EM density at recommended contour level for the first
chain complex in a \s-1PDB\s0 file using corresponding density map and header
file, and generate a \s-1PML\s0 file type:
.PP
.Vb 1
\&    % PyMOLVisualizeCryoEMDensity.py \-i 5K12.pdb \-o 5K12.pml
.Ve
.PP
To visualize electron density for the largest ligand in  chain K, and ligand
binding pocket to highlight ligand interactions with pockect residues,
solvents and inorganics, in a \s-1PDB\s0 and using corresponding map files, and
generate a \s-1PML\s0 file, type:
.PP
.Vb 1
\&    % PyMOLVisualizeCryoEMDensity.py \-c K \-i 5UMD.cif \-o 5UMD.pml
.Ve
.PP
To visualize electron density for all  chains along with any solvents in a
\&\s-1PDB\s0 file and using corresponding map files, and generate a \s-1PML\s0 file, type:
.PP
.Vb 1
\&    % PyMOLVisualizeCryoEMDensity.py \-c all \-i 5K12.pdb \-o 5K12.pml
.Ve
.PP
To visualize cryo-EM density at a specific contour level for the first chain
complex along with a mesh surface in a \s-1PDB\s0 file using corresponding to a
specific density map file, and generate a \s-1PML\s0 file, type:
.PP
.Vb 2
\&    % PyMOLVisualizeCryoEMDensity.py \-d emd_8194.map.gz \-\-meshLevel 1.0
\&      \-\-surfaceChainComplex yes \-i 5K12.pdb \-o 5K12.pml
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Manish Sud(msud@san.rr.com)
.SH "SEE ALSO"
.IX Header "SEE ALSO"
DownloadPDBFiles.pl,  PyMOLVisualizeElectronDensity.py,
PyMOLVisualizeMacromolecules.py
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2018 Manish Sud. All rights reserved.
.PP
The functionality available in this script is implemented using PyMOL, a
molecular visualization system on an open source foundation originally
developed by Warren DeLano.
.PP
This file is part of MayaChemTools.
.PP
MayaChemTools is free software; you can redistribute it and/or modify it under
the terms of the \s-1GNU\s0 Lesser General Public License as published by the Free
Software Foundation; either version 3 of the License, or (at your option) any
later version.
